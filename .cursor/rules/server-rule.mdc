---
description: 
globs: 
alwaysApply: false
---
# server 子项目规则

本子项目为命令行与Web后端服务相关代码，主要用于实现 命令行与Web接口、服务逻辑等。

## 目录结构
- [src/](mdc:packages/server/src)：主源码目录，包含命令行服务、控制器、模型等

```text
src/
├── cli/           # 命令行相关代码
│   └── commands/  # 命令实现
├── server/        # Web后端相关代码
│   ├── routes/    # 路由定义
│   └── controllers/ # 控制器
├── core/          # 业务相关的共享代码
│   ├── types/     # 类型定义
│   ├── services/  # 业务服务
│   └── models/    # 业务模型
├── utils/         # 通用工具函数
│   ├── string/    # 字符串处理
│   ├── date/      # 日期处理
│   └── file/      # 文件处理
└──                # 主入口文件
```
- [docs/](mdc:packages/server/docs)：文档相关内容，通过`--help`选项查看。
- [dist/](mdc:packages/server/dist)：编译输出目录
- [vite.config.ts](mdc:packages/server/vite.config.ts)：Vite 配置
- [tsconfig.json](mdc:packages/server/tsconfig.json)：TypeScript 配置
- 其他配置文件如 `env.d.ts`、`README.md` 等

## 常用npm模块
- commander: 管理命令行参数
- lodash-es: 常用工具函数
- fs-extra: 文件读写模块
- execa: 调用命令行
- axios: 发送HTTP请求
- express: 创建HTTP服务器
- dayjs: 处理日期时间相关的库
- chalk: 输出彩色的字体
其他没有提到的模块，请在开发功能的时候，阅读本子项目根目录的`package.json`文件，从中获取合适的模块。

## 命令修改说明

当需要修改某个命令时，应找到该命令对应的文件进行修改。
例如：

1. 修改 `eng` 命令，找到 `packages/server/src/core/eng/index.ts` 文件修改。
2. 修改 `git deploy` 命令，找到 `packages/server/src/core/git/deploy/index.ts` 文件修改。

## 命名规范
- 目录、文件名：小写字母+中划线（kebab-case）
- 变量/函数：小驼峰（camelCase）
- 类/类型/接口：大驼峰（PascalCase）
- 常量：全大写+下划线（SNAKE_CASE）

## 代码风格
- 推荐使用 TypeScript。类型声明方面，不要使用`any`类型，不确定的类型请使用`unknown`。
- 所有函数、类、接口、类型、重要变量需使用 JSDoc 注释，说明用途、参数和返回值
- 尽量使用类(class)组织代码。
- 在完成功能后，检查所有有修改的文件行数，如果超过了400行，需要自行检查如何拆分，并进行重构。
- 发送HTTP请求的代码，需要在类里面单独创建一个方法。
